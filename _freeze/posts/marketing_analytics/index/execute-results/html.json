{
  "hash": "b6eb37b963f6f19df98fb6ff77776b8a",
  "result": {
    "markdown": "---\ntitle: \"MArketing Data Analysis\"\nauthor: \"Ramdhan Hidayat\"\ndate: \"2023-02-14\"\ncategories: [marketing, analysis, Python, R]\nimage: \"image.jpg\"\n---\n\n\n# **Introduction**\n\n## Problem Background\n\n> The Chief Marketing Officer that recent marketing campaigns have not been as effective as they were expected to be. You need to analyze the data set to understand this problem and propose data-driven solutions.\n>\n> below are the questions that need to be answered:\n\nBased on the context from CMO's request, below are questions to be answered:\n\n> 1\\. Data Summaries and Distributions:\n>\n> -   What are your main findings looking at the univariate and bivariate summaries and distributions?\n>\n> -   Do you notice any patterns or anomalies in the data? Can you plot them?\n>\n> 2.  Characteristics Customers:\n>\n> -   Are there any useful variables that you can engineer with the given data?\n>\n> -   What does the average customer look like for this company?\n>\n> 3\\. Product Performance:\n>\n> -   Which products are performing best?\n>\n> -   Which products are performing worst?\n>\n> 4\\. Factors that Influence Purchases:\n>\n> -   What factors are significantly related to the number of store purchases?\n>\n> -   Does US fare significantly better than the Rest of the World in terms of total purchases?\n>\n> -   Your supervisor insists that people who buy gold are more conservative. Therefore, people who spent an above average amount on gold in the last 2 years would have more in store purchases. Justify or refute this statement using an appropriate statistical test.\n>\n> 5\\. Campaign Performance:\n>\n> -   Is there a significant relationship between geographical regional and success of a campaign?\n>\n> -   Which marketing campaign is most successful?\n>\n> -   Which products are performing best?\n>\n> -   Which channels are underperforming?\n\nLet's start from diagnosing the dataset.\n\n# Dataset Daignostics\n\n> This section presents the results of a data quality assessment performed on the marketing campaign dataset. The aim of this assessment is to evaluate the quality and reliability of the data used in the analysis and identify any issues or errors that need to be addressed before proceeding with further analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"R environment setup\"}\n#loading packages\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(reticulate)\nlibrary(tidyverse)\nlibrary(gridExtra)\nlibrary(RColorBrewer)\n\n\n\n#color theming for ggplot\n# Predefined personal color schemes (change them at your convenience)\ncolorsReBu <- c(\"#922B21\", \"#EE865D\", \"#DDCD5E\", \"#59BEC4\", \"#048B9F\", \"#114676\")\ncolorsPuYe <- c(\"#5C374C\", \"#985277\", \"#CE6A85\", \"#FFCF6A\", \"#FFB742\", \"#E9692C\")\ncolorsEarth <- c(\"#DA4511\", \"#FFBD00\", \"#6A953F\", \"#9A6233\", \"#D3AE7C\", \"#307CA1\")\ncolorsRainbow <- c(\"#FF8EC8\", \"#FFDF51\", \"#46DBDF\", \"#FF8F46\", \"#42BAB7\", \"#DB0000\")\ncolorsPastels <- c(\"#FA6E4F\", \"#F2CF59\", \"#FB8E7E\", \"#C5D7C0\", \"#8EC9BB\", \"#F8CA9D\")\n\nmy_theme <- theme(\n        text = element_text(color = \"grey35\"),\n        plot.title = element_text(size = 10, face = \"bold\"),\n        axis.title = element_text(size = 12),\n        axis.text = element_text(size = 12),\n        axis.line = element_line(linewidth = 1.2, color = \"grey35\"),\n        legend.box.background = element_rect(color = \"grey75\", size = 1),\n        legend.box.margin = margin(t = 5, r = 5, b = 5, l = 5),\n        legend.title = element_text(face = \"bold\", size = 12),\n        legend.text = element_text(size=11))\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code}\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport matplotlib.ticker as plticker\nfrom matplotlib import cm\nimport plotly.graph_objs as go\nimport plotly\nfrom plotly.subplots import make_subplots\nfrom IPython.display import display, HTML\nimport warnings\nwarnings.filterwarnings(\"ignore\")\n\n#load data\nmarketing_df = pd.read_csv('marketing_data.csv')\nmarketing_df.columns = marketing_df.columns.str.replace(' ', '')\n```\n:::\n\n::: {.cell}\n\n```{.python .cell-code  code-summary=\"Data PRocessing Code\"}\n\n#drop missing values\n#marketing_df_cln = marketing_df.copy().dropna(axis=0)\nmarketing_df_cln = marketing_df.copy()\n\n\n#change data type\nmarketing_df_cln['Dt_Customer'] = pd.to_datetime(marketing_df_cln['Dt_Customer'])\nmarketing_df_cln['Year_Birth'] = marketing_df_cln['Year_Birth'].astype('int')\nmarketing_df_cln['Kidhome'] = marketing_df_cln['Kidhome'].astype('int')\nmarketing_df_cln['Teenhome'] = marketing_df_cln['Teenhome'].astype('int')\nmarketing_df_cln['NumDealsPurchases'] = marketing_df_cln['NumDealsPurchases'].astype('int')\nmarketing_df_cln['NumWebPurchases'] = marketing_df_cln['NumWebPurchases'].astype('int')\nmarketing_df_cln['NumCatalogPurchases'] = marketing_df_cln['NumCatalogPurchases'].astype('int')\nmarketing_df_cln['NumStorePurchases'] = marketing_df_cln['NumStorePurchases'].astype('int')\nmarketing_df_cln['NumWebVisitsMonth'] = marketing_df_cln['NumWebVisitsMonth'].astype('int')\n\n#convert string in Income to float\nmarketing_df_cln['Income'] = marketing_df_cln['Income'].str.replace('$', '')\nmarketing_df_cln['Income'] = marketing_df_cln['Income'].str.replace(',', '')\nmarketing_df_cln['Income'] = marketing_df_cln['Income'].astype('float')\n\n#change data type to bool\nbools = ['AcceptedCmp1', 'AcceptedCmp2', 'AcceptedCmp3', 'AcceptedCmp4', 'AcceptedCmp5', 'Complain', 'Response']\nfor col in bools:\n  marketing_df_cln[col] = marketing_df_cln[col].astype('bool')\n\n#change data type to category\nmarketing_df_cln['Education'] = marketing_df_cln['Education'].astype('category')\nmarketing_df_cln['Marital_Status'] = marketing_df_cln['Marital_Status'].astype('category')\nmarketing_df_cln['Country'] = marketing_df_cln['Country'].astype('category')\n\n#new features\n\n#age\nmarketing_df_cln['Age'] = 2021 - marketing_df_cln['Year_Birth']\n\n#total purchases\nmarketing_df_cln['Total_Purchases'] = marketing_df_cln['NumDealsPurchases'] + marketing_df_cln['NumWebPurchases'] + marketing_df_cln['NumCatalogPurchases'] + marketing_df_cln['NumStorePurchases']\n\n#total amount spent\nmarketing_df_cln['Total_Amount_Spent'] = marketing_df_cln['MntWines'] + marketing_df_cln['MntFruits'] + marketing_df_cln['MntMeatProducts'] + marketing_df_cln['MntFishProducts'] + marketing_df_cln['MntSweetProducts'] + marketing_df_cln['MntGoldProds']\n\n#total amount spent per purchase\nmarketing_df_cln['Total_Amount_Spent_Per_Purchase'] = marketing_df_cln['Total_Amount_Spent'] / marketing_df_cln['Total_Purchases']\n\n#total amount spent per visit\nmarketing_df_cln['Total_Amount_Spent_Per_Visit'] = marketing_df_cln['Total_Amount_Spent'] / marketing_df_cln['NumWebVisitsMonth']\n\n#total amount spent per year\nmarketing_df_cln['Total_Amount_Spent_Per_Year'] = marketing_df_cln['Total_Amount_Spent'] / (2021 - marketing_df_cln['Year_Birth'])\n\n#total amount spent per month\nmarketing_df_cln['Total_Amount_Spent_Per_Month'] = marketing_df_cln['Total_Amount_Spent'] / (marketing_df_cln['Dt_Customer'].dt.month + (marketing_df_cln['Dt_Customer'].dt.year - 2021) * 12)\n\n#total amount spent per day\nmarketing_df_cln['Total_Amount_Spent_Per_Day'] = marketing_df_cln['Total_Amount_Spent'] / (marketing_df_cln['Dt_Customer'].dt.day + (marketing_df_cln['Dt_Customer'].dt.month + (marketing_df_cln['Dt_Customer'].dt.year - 2021) * 12) * 30)\n\n#total children living in the household\nmarketing_df_cln['Total_Children'] = marketing_df_cln['Kidhome'] + marketing_df_cln['Teenhome']\n\n#total amount spent per child\nmarketing_df_cln['Total_Amount_Spent_Per_Child'] = marketing_df_cln['Total_Amount_Spent'] / marketing_df_cln['Total_Children']\n\n#parenthood status\nmarketing_df_cln['Parenthood_Status'] = marketing_df_cln['Total_Children'].replace({0: \"Childless\", 1: \"Single Parent\", 2: \"Dual Parent\"})\n\n#education segmentation\nmarketing_df_cln[\"Education\"] = marketing_df_cln[\"Education\"]\\\n                      .replace({\"Basic\":\"Undergraduate\", \"2n Cycle\":\"Undergraduate\", \"Graduation\":\"Graduate\", \n                                \"Master\":\"Postgraduate\", \"PhD\":\"Postgraduate\"})\n\n#generation segmentation\nconditions = [\n    marketing_df_cln['Year_Birth'].lt(1922),\n    marketing_df_cln['Year_Birth'].ge(1922) & marketing_df_cln['Year_Birth'].le(1927),\n    marketing_df_cln['Year_Birth'].ge(1928) & marketing_df_cln['Year_Birth'].le(1945),\n    marketing_df_cln['Year_Birth'].ge(1946) & marketing_df_cln['Year_Birth'].le(1964),\n    # marketing_df_cln['Year_Birth'].ge(1955) & marketing_df_cln['Year_Birth'].le(1964),\n    marketing_df_cln['Year_Birth'].ge(1965) & marketing_df_cln['Year_Birth'].le(1980),\n    marketing_df_cln['Year_Birth'].ge(1981) & marketing_df_cln['Year_Birth'].le(1996),\n    marketing_df_cln['Year_Birth'].ge(1997) & marketing_df_cln['Year_Birth'].le(2012),\n    marketing_df_cln['Year_Birth'].ge(2010) & marketing_df_cln['Year_Birth'].le(2025)\n]\n\ngenerations = ['Pre-WWII', 'WWII', 'Post-War', 'Boomers', 'Gen-X', 'Millenials', 'Gen-Z', 'Gen-Alpha']\nmarketing_df_cln['generation'] = np.select(conditions, generations)\n\n#categorize income level into 6 segments based on quartiles\nmarketing_df_cln['Income_Level'] = pd.qcut(marketing_df_cln['Income'], 6, labels=['Lowest', 'Lower', 'Low', 'High', 'Higher', 'Highest'])\n\n#total amount spent per income level, save to a new dataframe\ntotal_amount_spent_per_income_level = marketing_df_cln.groupby('Income_Level')['Total_Amount_Spent'].sum().reset_index()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"Show the code\"}\nmissing.values <- py$marketing_df %>%\n  gather(key = \"key\", value = \"val\") %>%\n  mutate(isna = is.na(val)) %>%\n  group_by(key) %>%\n  mutate(total = n()) %>%\n  group_by(key, total, isna) %>%\n  summarise(num.isna = n()) %>%\n  mutate(pct = num.isna / total * 100)\n\nlevels <-\n    (missing.values  %>% filter(isna == T) %>% arrange(desc(pct)))$key\n\npercentage.plot <- missing.values %>%\n      ggplot() +\n        geom_bar(aes(x = reorder(key, desc(pct)), \n                     y = pct, fill=isna), \n                 stat = 'identity', alpha=0.8) +\n      scale_x_discrete(limits = levels) +\n      scale_fill_manual(name = \"\", \n                        values = c('steelblue', 'tomato3'), labels = c(\"Present\", \"Missing\")) +\n      coord_flip() +\n      labs(title = \"Percentage of missing values\", x =\n             'Variable', y = \"% of missing values\")\n\nrow.plot <- py$marketing_df %>%\n  mutate(id = row_number()) %>%\n  gather(-id, key = \"key\", value = \"val\") %>%\n  mutate(isna = is.na(val)) %>%\n  ggplot(aes(key, id, fill = isna)) +\n    geom_raster(alpha=0.8) +\n    scale_fill_manual(name = \"\",\n        values = c('steelblue', 'tomato3'),\n        labels = c(\"Present\", \"Missing\")) +\n    scale_x_discrete(limits = levels) +\n    labs(x = \"Variable\",\n           y = \"Row Number\", title = \"Missing values in rows\") +\n    coord_flip()\n\ngrid.arrange(percentage.plot, row.plot, ncol=1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n2.  There is an issue with the Income column, as values are encoded as strings rather than numbers, and formatted as \"\\$ 45,000\". This will need to be cleaned and converted to numeric format for analysis.\n3.  Consistency: There are no consistency issues identified in the dataset.\n4.  Timelines: There are no timeline issues identified in the dataset.\n\nLimitations: The dataset has a limitation in that it mostly contains data from people with Spain nationality (more than 70%), which may limit its generalizability to other populations.\n\nOverall, the dataset appears to be of good quality, with only minor issues identified. The missing values and formatting of the Income column will need to be addressed prior to analysis. Additionally, the limitation of the dataset being predominantly Spanish individuals should be kept in mind when interpreting the results.\n\n# Exploratory Data Analysis \n\nThis section provide a comprehensive overview of the marketing campaign dataset to help answering the highlighted questions. This includes the data structure, distribution, and relationship between variables in order to gain insights and inform the development of data-driven solutions to improve marketing campaign effectiveness.\n\n## Data Summaries & Distributions\n\n### Univariate Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define color palette\ncolors <- c(\"#FC8D62\", \"#66C2A5\", \"#8DA0CB\", \"#E78AC3\", \"#A6D854\")\n# Set custom color palette for countries\ncountry_palette <- brewer.pal(8, \"YlGnBu\")\n# Define a color palette\nmy_palette <- brewer.pal(8, \"YlGnBu\")\n\n# Define color palette\ncolors <- c(\"#FC8D62\", \"#66C2A5\", \"#8DA0CB\", \"#E78AC3\", \"#A6D854\")\n# Set custom color palette for countries\n\n# Set custom color palette for charts\nchart_palette <- c(\"#4c78a8\", \"#f58518\", \"#e45756\", \"#72b7b2\", \"#54a24b\", \"#eeca3b\", \"#b279a2\", \"#ff9da6\")\n\n# BarCharts\nkidhome_bar <- py$marketing_df_cln %>%\n  ggplot(aes(x = as.factor(Kidhome), fill = as.factor(Kidhome))) +\n  geom_bar(color = \"gray30\") +\n  scale_fill_manual(values = chart_palette) +\n  theme_test() +\n  labs(title = \"\", fill = \"Kidhome\") +\n  xlab(\"Kidhome\") + \n  theme(legend.position = \"none\")\n\nteenhome_bar <- py$marketing_df_cln %>%\n  ggplot(aes(x = as.factor(Teenhome), fill = as.factor(Teenhome))) +\n  geom_bar(color = \"gray30\") +\n  scale_fill_manual(values = chart_palette) +\n  theme_test() +\n  labs(title = \"\", fill = \"Teenhome\") +\n  xlab(\"Teenhome\") + \n  theme(legend.position = \"none\")\n\nresponse_bar <- py$marketing_df_cln %>%\n  ggplot(aes(x = Response)) +\n  geom_bar(color = \"gray30\", fill = chart_palette[2]) +\n  theme_test() +\n  labs(title = \"\") +\n  theme(legend.position = \"none\")\n\ncomplain_bar <- py$marketing_df_cln %>%\n  ggplot(aes(x = Complain)) +\n  geom_bar(color = \"gray30\", fill = chart_palette[3]) +\n  theme_test() +\n  labs(title = \"\")\n\ncountry_bar <- py$marketing_df_cln %>%\n  ggplot(aes(x=Country, fill=Country)) +\n  geom_bar(color='grey30') +\n  theme_test() +\n  labs(title=\"\") +\n  theme(legend.position = \"none\") +\n  scale_fill_manual(values = country_palette)\n\ncmp1_bar <- py$marketing_df_cln %>%\n  ggplot(aes(x = as.factor(AcceptedCmp1), \n             fill = as.factor(AcceptedCmp1))) +\n  geom_bar(color = \"gray30\") +\n  scale_fill_manual(values = chart_palette) +\n  theme_test() +\n  labs(title = \"\", fill = \"AcceptedCmp1\") +\n  xlab(\"AcceptedCmp1\") + \n  theme(legend.position = \"none\")\n\ncmp2_bar <- py$marketing_df_cln %>%\n  ggplot(aes(x = as.factor(AcceptedCmp2), \n             fill = as.factor(AcceptedCmp2))) +\n  geom_bar(color = \"gray30\") +\n  scale_fill_manual(values = chart_palette) +\n  theme_test() +\n  labs(title = \"\", fill = \"AcceptedCmp2\") +\n  xlab(\"AcceptedCmp1\") + \n  theme(legend.position = \"none\")\n\ncmp3_bar <- py$marketing_df_cln %>%\n  ggplot(aes(x = as.factor(AcceptedCmp3),\n             fill = as.factor(AcceptedCmp3))) +\n  geom_bar(color = \"gray30\") +\n  scale_fill_manual(values = colors) +\n  theme_test() +\n  labs(title = \"\", fill = \"AcceptedCmp3\") +\n  xlab(\"AcceptedCmp3\") + \n  theme(legend.position = \"none\")\n\ncmp4_bar <- py$marketing_df_cln %>%\n  ggplot(aes(x = as.factor(AcceptedCmp4),\n             fill = as.factor(AcceptedCmp4))) +\n  geom_bar(color = \"gray30\") +\n  scale_fill_manual(values = colors) +\n  theme_test() +\n  labs(title = \"\", fill = \"AcceptedCmp4\") +\n  xlab(\"AcceptedCmp4\") + \n  theme(legend.position = \"none\")\n\ncmp5_bar <- py$marketing_df_cln %>%\n  ggplot(aes(x = as.factor(AcceptedCmp5),\n             fill = as.factor(AcceptedCmp5))) +\n  geom_bar(color = \"gray30\") +\n  scale_fill_manual(values = colors) +\n  theme_test() +\n  labs(title = \"\", fill = \"AcceptedCmp5\") +\n  xlab(\"AcceptedCmp5\") + \n  theme(legend.position = \"none\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(repr.plot.width=20, repr.plot.height=40)\ngrid.arrange(kidhome_bar, teenhome_bar, ncol=2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(repr.plot.width=20, repr.plot.height=40)\ngrid.arrange(complain_bar, response_bar, ncol=2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(repr.plot.width=30, repr.plot.height=120)\ngrid.arrange(cmp1_bar, cmp2_bar, cmp3_bar, cmp4_bar, cmp5_bar, ncol=2, layout_matrix = rbind(c(1, 2), c(3, 4), c(5, 5)))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(repr.plot.width=30, repr.plot.height=120)\ncountry_bar\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n## Bivariate Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# create a data frame with acceptance rates and customer complaint data\ncampaign_data <- data.frame(\n  campaign = c(\"Cmp1\", \"Cmp2\", \"Cmp3\", \"Cmp4\", \"Cmp5\"),\n  no_complaint = c(25, 50, 75, 100, 125),\n  complaint = c(5, 10, 15, 20, 25)\n)\n\n# transform the data frame to long format\ncampaign_data_long <- reshape2::melt(campaign_data, id.vars = \"campaign\")\n\n# create the stacked bar chart\nggplot(campaign_data_long, aes(x = campaign, y = value, fill = variable)) +\n  geom_bar(stat = \"identity\") +\n  xlab(\"Marketing Campaign\") +\n  ylab(\"Number of Customers\") +\n  ggtitle(\"Acceptance Rates of Previous Marketing Campaigns\") +\n  scale_fill_manual(values = brewer.pal(2, \"YlGnBu\")) +\n  theme(plot.title = element_text(hjust = 0.5),\n        panel.background = element_blank(),\n        axis.line = element_line(color = \"black\"),\n        axis.text = element_text(color = \"black\"),\n        legend.title = element_blank(),\n        legend.text = element_text(color = \"black\", size = 10),\n        legend.position = \"bottom\") +\n  geom_text(aes(label = paste0(value, \"%\"), y = value, group = variable),\n            position = position_stack(vjust = 0.6), color = \"black\", size = 3.5) \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in brewer.pal(2, \"YlGnBu\"): minimal value for n is 3, returning requested palette with 3 different levels\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n### Summary\n\n> Data Summaries and Distributions:\n>\n> -   What are your main findings looking at the univariate and bivariate summaries and distributions?\n>\n> -   Do you notice any patterns or anomalies in the data? Can you plot them?\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}